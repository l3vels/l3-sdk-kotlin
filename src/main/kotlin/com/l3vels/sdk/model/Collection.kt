/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.l3vels.sdk.model


import com.squareup.moshi.Json

/**
 * 
 *
 * @param id The unique identifier for the collection entity.
 * @param uniqueId The unique identifier that can be provided by game studio.
 * @param name The name of the collection.
 * @param description A brief description of the collection.
 * @param logoImage An image representing the collection's logo.
 * @param medias Additional images associated with the collection, such as screenshots or promotional images.
 * @param mainMedia The main or featured image associated with the game. You can set it from the dashboard as main image.
 * @param url A unique URL for the collection on the L3vels platform.
 * @param webLink A URL link to the collection's webpage.
 * @param supply The supply represents the number of assets that are available within the Collection.
 * @param customPropertyProps Custom properties that are unique to the collection and defined by the developer to categorize and filter them.
 * @param socialLinks Additional social links associated with the collection
 * @param customAssetProps Custom assets fields associated with the collection.
 * @param categories The category or categories that the collection belongs to.
 * @param status The current status of the collection. Possible values are: Draft, Active
 * @param accountId The unique identifier of the account that the Collection belongs to.
 * @param projectId The unique identifier of the project that the collection is associated with. This allows developers to organize their collections by project and helps with tracking and reporting.
 * @param createdOn The date when the collection was created.
 * @param modifiedOn The date when the collection was last modified.
 * @param createdBy The Id of the user who created the collection.
 * @param modifiedBy The Id of the user who last modified the collection.
 */


data class Collection (

    /* The unique identifier for the collection entity. */
    @Json(name = "id")
    val id: kotlin.String,

    /* The unique identifier that can be provided by game studio. */
    @Json(name = "unique_id")
    val uniqueId: kotlin.String,

    /* The name of the collection. */
    @Json(name = "name")
    val name: kotlin.String,

    /* A brief description of the collection. */
    @Json(name = "description")
    val description: kotlin.String,

    /* An image representing the collection's logo. */
    @Json(name = "logo_image")
    val logoImage: kotlin.String,

    /* Additional images associated with the collection, such as screenshots or promotional images. */
    @Json(name = "medias")
    val medias: kotlin.collections.List<kotlin.String>,

    /* The main or featured image associated with the game. You can set it from the dashboard as main image. */
    @Json(name = "main_media")
    val mainMedia: kotlin.String,

    /* A unique URL for the collection on the L3vels platform. */
    @Json(name = "url")
    val url: kotlin.String,

    /* A URL link to the collection's webpage. */
    @Json(name = "web_link")
    val webLink: kotlin.String,

    /* The supply represents the number of assets that are available within the Collection. */
    @Json(name = "supply")
    val supply: java.math.BigDecimal,

    /* Custom properties that are unique to the collection and defined by the developer to categorize and filter them. */
    @Json(name = "custom_property_props")
    val customPropertyProps: kotlin.Any,

    /* Additional social links associated with the collection */
    @Json(name = "social_links")
    val socialLinks: kotlin.collections.List<kotlin.String>,

    /* Custom assets fields associated with the collection. */
    @Json(name = "custom_asset_props")
    val customAssetProps: kotlin.Any,

    /* The category or categories that the collection belongs to. */
    @Json(name = "categories")
    val categories: kotlin.Any,

    /* The current status of the collection. Possible values are: Draft, Active */
    @Json(name = "status")
    val status: kotlin.String,

    /* The unique identifier of the account that the Collection belongs to. */
    @Json(name = "account_id")
    val accountId: java.math.BigDecimal,

    /* The unique identifier of the project that the collection is associated with. This allows developers to organize their collections by project and helps with tracking and reporting. */
    @Json(name = "project_id")
    val projectId: kotlin.String,

    /* The date when the collection was created. */
    @Json(name = "created_on")
    val createdOn: java.time.OffsetDateTime,

    /* The date when the collection was last modified. */
    @Json(name = "modified_on")
    val modifiedOn: java.time.OffsetDateTime,

    /* The Id of the user who created the collection. */
    @Json(name = "created_by")
    val createdBy: java.math.BigDecimal,

    /* The Id of the user who last modified the collection. */
    @Json(name = "modified_by")
    val modifiedBy: java.math.BigDecimal

)

