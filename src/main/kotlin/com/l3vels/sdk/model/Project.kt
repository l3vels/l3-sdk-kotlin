/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.l3vels.sdk.model


import com.squareup.moshi.Json

/**
 * 
 *
 * @param id The unique identifier for the Game entity.
 * @param name The name of the Game.
 * @param description A brief description of the Game.
 * @param category The category or genre of the Game.
 * @param logoImage The logo or icon associated with the Game.
 * @param medias Additional images associated with the collection, such as screenshots or promotional images.
 * @param socialLinks Additional social links associated with the collection
 * @param mainMedia The main or featured image associated with the Game. You can set it from the Dashboard as main image.
 * @param url A unique URL for the game on the L3vels platform.
 * @param webLink The URL for the Game's website or landing page.
 * @param discord The link to the Game's Discord server.
 * @param twitter The link to the Game's official Twitter account.
 * @param instagram The link to the Game's official Instagram account.
 * @param contactPhone  A phone number for contacting the Game's developers or support team.
 * @param contactEmail An email address for contacting the Game's developers or support team.
 * @param status The current status of the Game, such as \"Draft\", \"Active\", or \"Inactive\".
 * @param accountId  The unique identifier of the account that the Game belongs to. This allows developers to manage multiple Games across multiple accounts.
 * @param createdOn The date and time that the Game entity was created.
 * @param modifiedOn The date and time that the Game entity was last modified.
 * @param createdBy The user or system that created the Game entity.
 * @param modifiedBy The user or system that last modified the Game entity.
 */


data class Project (

    /* The unique identifier for the Game entity. */
    @Json(name = "id")
    val id: kotlin.String,

    /* The name of the Game. */
    @Json(name = "name")
    val name: kotlin.String,

    /* A brief description of the Game. */
    @Json(name = "description")
    val description: kotlin.String,

    /* The category or genre of the Game. */
    @Json(name = "category")
    val category: kotlin.String,

    /* The logo or icon associated with the Game. */
    @Json(name = "logo_image")
    val logoImage: kotlin.String,

    /* Additional images associated with the collection, such as screenshots or promotional images. */
    @Json(name = "medias")
    val medias: kotlin.collections.List<kotlin.String>,

    /* Additional social links associated with the collection */
    @Json(name = "social_links")
    val socialLinks: kotlin.collections.List<kotlin.String>,

    /* The main or featured image associated with the Game. You can set it from the Dashboard as main image. */
    @Json(name = "main_media")
    val mainMedia: kotlin.String,

    /* A unique URL for the game on the L3vels platform. */
    @Json(name = "url")
    val url: kotlin.String,

    /* The URL for the Game's website or landing page. */
    @Json(name = "web_link")
    val webLink: kotlin.String,

    /* The link to the Game's Discord server. */
    @Json(name = "discord")
    val discord: kotlin.String,

    /* The link to the Game's official Twitter account. */
    @Json(name = "twitter")
    val twitter: kotlin.String,

    /* The link to the Game's official Instagram account. */
    @Json(name = "instagram")
    val instagram: kotlin.String,

    /*  A phone number for contacting the Game's developers or support team. */
    @Json(name = "contact_phone")
    val contactPhone: kotlin.String,

    /* An email address for contacting the Game's developers or support team. */
    @Json(name = "contact_email")
    val contactEmail: kotlin.String,

    /* The current status of the Game, such as \"Draft\", \"Active\", or \"Inactive\". */
    @Json(name = "status")
    val status: kotlin.String,

    /*  The unique identifier of the account that the Game belongs to. This allows developers to manage multiple Games across multiple accounts. */
    @Json(name = "account_id")
    val accountId: java.math.BigDecimal,

    /* The date and time that the Game entity was created. */
    @Json(name = "created_on")
    val createdOn: java.time.OffsetDateTime,

    /* The date and time that the Game entity was last modified. */
    @Json(name = "modified_on")
    val modifiedOn: java.time.OffsetDateTime,

    /* The user or system that created the Game entity. */
    @Json(name = "created_by")
    val createdBy: java.math.BigDecimal,

    /* The user or system that last modified the Game entity. */
    @Json(name = "modified_by")
    val modifiedBy: java.math.BigDecimal

)

