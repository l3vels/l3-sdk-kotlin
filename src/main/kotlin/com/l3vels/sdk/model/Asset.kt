/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.l3vels.sdk.model


import com.squareup.moshi.Json

/**
 * 
 *
 * @param id The unique identifier for the asset entity.
 * @param tokenId The token id of the asset.
 * @param name The name of the asset.
 * @param parentId ID of the parent asset.
 * @param properties Custom properties of the asset.
 * @param attributes Custom attributes of the asset.
 * @param description The description of the asset.
 * @param status The status of the asset.
 * @param price The price of the asset.
 * @param supply The supply of the asset.
 * @param mintedAmount The minted amount of the asset.
 * @param assetType The asset type. Can be main or nested.
 * @param assetUrl The asset URL.
 * @param medias Additional images associated with the asset, such as screenshots or promotional images.
 * @param mainMedia The main or featured image associated with the asset. You can set it from the Dashboard as main image.
 * @param accountId The unique identifier of the account that the Collection belongs to.
 * @param projectId The unique identifier of the project that the asset is associated with. This allows developers to organize their assets by project and helps with tracking and reporting.
 * @param collectionId The unique identifier of the collection that the asset is associated with. This allows developers to organize their collections by project and helps with tracking and reporting.
 * @param createdOn The date when the collection was created.
 * @param modifiedOn The date when the collection was last modified.
 * @param createdBy The Id of the user who created the collection.
 * @param modifiedBy The Id of the user who last modified the collection.
 */


data class Asset (

    /* The unique identifier for the asset entity. */
    @Json(name = "id")
    val id: kotlin.String,

    /* The token id of the asset. */
    @Json(name = "token_id")
    val tokenId: java.math.BigDecimal,

    /* The name of the asset. */
    @Json(name = "name")
    val name: kotlin.String,

    /* ID of the parent asset. */
    @Json(name = "parent_id")
    val parentId: kotlin.String,

    /* Custom properties of the asset. */
    @Json(name = "properties")
    val properties: kotlin.Any,

    /* Custom attributes of the asset. */
    @Json(name = "attributes")
    val attributes: kotlin.Any,

    /* The description of the asset. */
    @Json(name = "description")
    val description: kotlin.String,

    /* The status of the asset. */
    @Json(name = "status")
    val status: kotlin.String,

    /* The price of the asset. */
    @Json(name = "price")
    val price: java.math.BigDecimal,

    /* The supply of the asset. */
    @Json(name = "supply")
    val supply: java.math.BigDecimal,

    /* The minted amount of the asset. */
    @Json(name = "minted_amount")
    val mintedAmount: java.math.BigDecimal,

    /* The asset type. Can be main or nested. */
    @Json(name = "asset_type")
    val assetType: kotlin.String,

    /* The asset URL. */
    @Json(name = "asset_url")
    val assetUrl: kotlin.String,

    /* Additional images associated with the asset, such as screenshots or promotional images. */
    @Json(name = "medias")
    val medias: kotlin.collections.List<kotlin.String>,

    /* The main or featured image associated with the asset. You can set it from the Dashboard as main image. */
    @Json(name = "main_media")
    val mainMedia: kotlin.String,

    /* The unique identifier of the account that the Collection belongs to. */
    @Json(name = "account_id")
    val accountId: java.math.BigDecimal,

    /* The unique identifier of the project that the asset is associated with. This allows developers to organize their assets by project and helps with tracking and reporting. */
    @Json(name = "project_id")
    val projectId: kotlin.String,

    /* The unique identifier of the collection that the asset is associated with. This allows developers to organize their collections by project and helps with tracking and reporting. */
    @Json(name = "collection_id")
    val collectionId: kotlin.String,

    /* The date when the collection was created. */
    @Json(name = "created_on")
    val createdOn: java.time.OffsetDateTime,

    /* The date when the collection was last modified. */
    @Json(name = "modified_on")
    val modifiedOn: java.time.OffsetDateTime,

    /* The Id of the user who created the collection. */
    @Json(name = "created_by")
    val createdBy: java.math.BigDecimal,

    /* The Id of the user who last modified the collection. */
    @Json(name = "modified_by")
    val modifiedBy: java.math.BigDecimal

)

